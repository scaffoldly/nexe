name: Build and Push Docker Image

on:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  warm:
    strategy:
      matrix:
        node: [20, 22]
        os: [linux]
        platform: [amd64, arm64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: docker/setup-qemu-action@v3

      - id: node-version
        run: |
          docker pull --platform ${{ matrix.os }}/${{ matrix.platform }} node:${{ matrix.node }} 2>&1 > /dev/null
          docker run --platform ${{ matrix.os }}/${{ matrix.platform }} node:${{ matrix.node }} bash -c "node --version"

      - uses: actions/cache@v4
        with:
          path: .nexe
          key: ${{ matrix.os }}-${{ matrix.platform }}-${{ join(steps.node-version.outputs.*, '') }}-nexe

      - run: >
          docker run 
            --mount=type=bind,src=.,dst=/root -w /root 
            --platform ${{ matrix.platform }}
            node:${{ matrix.node }} 
              bash -c "yarn && yarn build --python=/usr/bin/python3 && ./dist/is-warm"

      - uses: actions/upload-artifact@v4
        id: upload
        with:
          name: nexe-${{ matrix.os }}-${{ matrix.platform }}-${{ matrix.node }}
          path: .nexe

  # build:
  #   needs: warm
  #   strategy:
  #     matrix:
  #       node: [20, 22]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: docker/login-action@v3
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - uses: docker/setup-qemu-action@v3
  #     - uses: docker/setup-buildx-action@v3
  #     - uses: docker/metadata-action@v5
  #       id: meta
  #       with:
  #         images: |
  #           ghcr.io/${{ github.repository }}
  #         tags: |
  #           type=schedule,prefix=node-${{ matrix.node }}
  #           type=raw,value=node-${{ matrix.node }}
  #     - uses: docker/build-push-action@v6
  #       with:
  #         tags: ${{ steps.meta.outputs.tags }}
  #         labels: ${{ steps.meta.outputs.labels }}
  #         platforms: linux/amd64,linux/arm64
  #         build-args: |
  #           NODE_VERSION=${{ matrix.node }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  #         pull: true
  #         push: true
